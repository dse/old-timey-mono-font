#!/usr/bin/env -S fontforge -quiet
# -*- mode: python; coding: utf-8 -*-

import fontforge
import argparse
import os
import sys

sys.path.append(os.getenv("HOME") + "/git/dse.d/fontforge-utilities/lib")
import mixedjsontext
import silence

def main():
    global args
    parser = argparse.ArgumentParser()
    parser.add_argument('font_filename', help="font filename")
    parser.add_argument('--expand-stroke', '-x', type=int, help="number of pixels to expand stroke", default=96)
    parser.add_argument('-o', '--save-as', '--output', type=str,
                        help="after editing, save as new file, converts if file extension is different")
    args = parser.parse_args()

    print("Loading %s" % args.font_filename)
    font = fontforge.open(args.font_filename)
    write_font_filename = args.save_as if args.save_as is not None else args.font_filename

    silence.on()
    for glyph in font.glyphs():
        if mixedjsontext.fontcomment_says_generated(glyph.comment):
            continue
        orig_width = glyph.width
        if args.expand_stroke is not None:
            glyph.stroke("circular", args.expand_stroke, "round", "round")
        glyph.removeOverlap()
        glyph.width = orig_width
    silence.off()

    if os.path.splitext(write_font_filename)[1] == '.sfd':
        print("Saving %s" % write_font_filename)
        font.save(write_font_filename)
    else:
        print("Generating %s" % write_font_filename)
        font.generate(write_font_filename)

main()        
