#!/usr/bin/env -S fontforge -quiet
# -*- mode: python; coding: utf-8 -*-
import fontforge
import argparse
import re
from datetime import datetime

AUTHOR = "Darren Embry"
YEAR = datetime.now().year

def main():
    global args
    parser = argparse.ArgumentParser()
    parser.add_argument('version')
    parser.add_argument('filenames', nargs='+')
    args = parser.parse_args()
    version = parse_ver(args.version)
    if version is None:
        raise Exception("invalid version: %s" % version)
    for filename in args.filenames:
        font = fontforge.open(filename)
        font.sfntRevision = float("%d.%02d%02d" % version[0:3]) # rounded to the nearest 1/65536 or 0.0000152587890625 lol.
        font.appendSFNTName(1033, "Version", "Version " + args.version)
        if filename.endswith(".sfd"):
            font.save(filename)
        else:
            font.generate(filename)
        font.close()

def parse_ver(ver):
    match = re.fullmatch(r'(?:(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)\.(0|[1-9][0-9]*))(?:-([^-+]+))?(?:\+([^-+]+))?', ver)
    if not match:
        return None
    major  = int(match.group(1))
    minor  = int(match.group(2))
    patch  = int(match.group(3))
    prerel = match.group(4)
    build  = match.group(5)
    return (major, minor, patch, prerel, build)

main()
